#! /bin/bash

export MYPORTS_DIR=${MYPORTS_DIR:-$HOME/.myports}
export MYPORTS_EDITOR=${MYPORTS_EDITOR:-code}
export MYPORTS_SHELL=${MYPORTS_SHELL:-bash}

myports-help() {
cat << __EOM__
Management user personal dotfiles and scripts
Usage: myports <command> ...

Commands:
  bin <subcommand>
          : management scripts, see 'myports bin help'
  commit  : commit changes
  dotfiles <subcommand>
          : management dotfiles, see 'myports dotfiles help'
  edit    : open myports directory by MYPORTS_EDTOR=${MYPORTS_EDITOR}
  env     : show configurable ENVs
  init    : clean all registered contents
  log     : show commit log
  sh      : enter myports shell by MYPORTS_SHELL=${MYPORTS_SHELL}
  pull    : pull updates from remote
  push    : push updates to remote
  show-remote
          : show remote information
__EOM__
}

# Sub-commands
# ------------

myports-commit() {
  myports-dotfiles commit
  myports-bin commit
}

myports-edit() {
  $MYPORTS_EDITOR $MYPORTS_DIR
}

myports-env() {
  echo "MYPORTS_DIR    =${MYPORTS_DIR}"
  echo "MYPORTS_SHELL  =${MYPORTS_SHELL}"
  echo "MYPORTS_EDITOR =${MYPORTS_EDITOR}"
}

myports-init() {
  confirm 'This removes all registered contents. Are you sure to continue?'
  rm $MYPORTS_DIR/bin/*
  rm $MYPORTS_DIR/dotfiles/.*
}

myports-log() {
  cd $MYPORTS_DIR
  git log
}

myports-sh() {
  echo "Enter ${MYPORTS_DIR}"
  cd $MYPORTS_DIR
  $MYPORTS_SHELL
}

myports-pull() {
  cd $MYPORTS_DIR
  git pull
}

myports-push() {
  cd $MYPORTS_DIR
  git push
}

myports-show-remote() {
  cd $MYPORTS_DIR
  git fetch
  git remote -v
  git diff origin/master
}

# Utilities
# ---------

confirm() {
  read -p "$1 [y/N]: " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 0
  fi
}

# Main Script
# -----------

subcommand=$1
case $subcommand in
    "" | "-h" | "--help")
        myports-help
        ;;
    *)
        shift
        myports-${subcommand} $@
        if [ $? = 127 ]; then
          myports-help
        fi
        ;;
esac